{"version":3,"file":"Task.stories.f00e9ba2.js","sources":["../../src/components/Task.jsx","../../src/components/Task.stories.jsx"],"sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\nexport default function Task({\n  task: { id, title, state },\n  onArchiveTask,\n  onPinTask,\n}) {\n  return (\n    <div className={`list-item ${state}`}>\n      <label\n        htmlFor='checked'\n        aria-label={`archiveTask-${id}`}\n        className='checkbox'\n      >\n        <input\n          type='checkbox'\n          disabled={true}\n          name='checked'\n          id={`archiveTask-${id}`}\n          checked={state === \"TASK_ARCHIVED\"}\n        />\n        <span className='checkbox-custom' onClick={() => onArchiveTask(id)} />\n      </label>\n\n      <label htmlFor='title' aria-label={title} className='title'>\n        <input\n          type='text'\n          value={title}\n          readOnly={true}\n          name='title'\n          placeholder='Input title'\n          style={{ textOverflow: \"ellipsis\" }}\n        />\n      </label>\n\n      {state !== \"TASK_ARCHIVED\" && (\n        <button\n          className='pin-button'\n          onClick={() => onPinTask(id)}\n          id={`pinTask-${id}`}\n          aria-label={`pinTask-${id}`}\n          key={`pinTask-${id}`}\n        >\n          <span className={`icon-star`} />\n        </button>\n      )}\n    </div>\n  );\n}\nTask.propTypes = {\n  task: PropTypes.shape({\n    id: PropTypes.string.isRequired,\n    title: PropTypes.string.isRequired,\n    state: PropTypes.string.isRequired,\n  }),\n  onArchiveTask: PropTypes.func,\n  onPinTask: PropTypes.func,\n};\n","import Task from \"./Task\";\n\nexport default {\n  component: Task,\n  title: \"Task\",\n};\n\nconst Template = (args) => <Task {...args} />;\n\nexport const Default = Template.bind({});\nDefault.args = {\n  task: {\n    id: \"1\",\n    title: \"Test Task\",\n    state: \"TASK_INBOX\",\n  },\n};\n\nexport const Pinned = Template.bind({});\nPinned.args = {\n  task: {\n    ...Default.args.task,\n    state: \"TASK_PINNED\",\n  },\n};\n\nexport const Archived = Template.bind({});\nArchived.args = {\n  task: {\n    ...Default.args.task,\n    state: \"TASK_ARCHIVED\",\n  },\n};\n"],"names":["Task","task","id","title","state","onArchiveTask","onPinTask","_jsxs","_jsx","textOverflow","propTypes","PropTypes","shape","string","isRequired","func","Task_stories","component","Template","args","Default","bind","Pinned","Archived"],"mappings":"yHAEA,SAAAA,EAAA,CACAC,KAAA,CAAAC,GAAAA,EAAAC,MAAAA,EAAAC,MAAAA,CAAA,EACAC,cAAAA,EACAC,UAAAA,CACA,EAAA,CACA,SACA,MAAA,CAAA,UAAA,aAAAF,IAAA,SACA,CAAAG,EAAA,QAAA,CACA,QAAA,UACA,aAAA,eAAAL,IACA,UAAA,WAAA,SAEA,CAAAM,EAAA,QAAA,CACA,KAAA,WACA,SAAA,GACA,KAAA,UACA,GAAA,eAAAN,IACA,QAAAE,IAAA,eAAA,CAAA,EAEAI,EAAA,OAAA,CAAA,UAAA,kBAAA,QAAA,IAAAH,EAAAH,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,EAGAM,EAAA,QAAA,CAAA,QAAA,QAAA,aAAAL,EAAA,UAAA,QAAA,WACA,QAAA,CACA,KAAA,OACA,MAAAA,EACA,SAAA,GACA,KAAA,QACA,YAAA,cACA,MAAA,CAAAM,aAAA,UAAA,CAAA,CAAA,CACA,CAAA,EAGAL,IAAA,mBACA,SAAA,CACA,UAAA,aACA,QAAA,IAAAE,EAAAJ,CAAA,EACA,GAAA,WAAAA,IACA,aAAA,WAAAA,IAAA,WAGA,OAAA,CAAA,UAAA,WAAA,CAAA,CAAA,EAFA,WAAAA,GAAA,CAIA,CAAA,CACA,CAEA,CACAF,EAAAU,UAAA,CACAT,KAAAU,UAAAC,MAAA,CACAV,GAAAS,EAAAA,QAAAE,OAAAC,WACAX,MAAAQ,EAAAA,QAAAE,OAAAC,WACAV,MAAAO,EAAAA,QAAAE,OAAAC,UAAAA,CACA,EACAT,cAAAM,EAAAI,QAAAA,KACAT,UAAAK,EAAAI,QAAAA,IACA,iWCvDA,MAAeC,EAAA,CACbC,UAAWjB,EACXG,MAAO,MACT,EAEMe,EAAqBC,GAAAX,EAACR,EAAI,CAAA,GAAKmB,CAAI,CAAI,EAEhCC,EAAUF,EAASG,KAAK,EAAE,EACvCD,EAAQD,KAAO,CACblB,KAAM,CACJC,GAAI,IACJC,MAAO,YACPC,MAAO,YACT,CACF,EAEO,MAAMkB,EAASJ,EAASG,KAAK,CAAA,CAAE,EACtCC,EAAOH,KAAO,CACZlB,KAAM,CACJ,GAAGmB,EAAQD,KAAKlB,KAChBG,MAAO,aACT,CACF,EAEO,MAAMmB,EAAWL,EAASG,KAAK,CAAA,CAAE,EACxCE,EAASJ,KAAO,CACdlB,KAAM,CACJ,GAAGmB,EAAQD,KAAKlB,KAChBG,MAAO,eACT,CACF"}